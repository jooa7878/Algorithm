#include <string>
#include <vector>

using namespace std;

bool check(char c){
    if ( !isalpha(c)&& !isdigit(c) && c != '-' && c !='_'  && c !='.'){
        return false;
    }
    return true;
    
}

string end_machim(string s){ // 끝에 마침표
        if(s[s.length()-1] == '.'){ 
        int index = -1; 
        for(int i=0; i<s.length(); i++){
            if(s[i] != '.'){
                index = i;
            }
        }
        if(index != -1){
           s.erase(index+1);
        }
    }
    return s;
}

string solution(string new_id) {
    string answer = "";
    
    int length = new_id.length();
    
    for(int i=0; i<new_id.length(); i++){  // 대문자 -> 소문자, 특수문자 처리
        if(new_id[i] >= 65 && new_id[i] <= 90 ){
            new_id[i] += 32;
        } 
        if (!check(new_id[i])){
            new_id.erase(i, 1);
            i=-1;
        }
    }
    
    for(int i=0; i<new_id.length()-1; i++){ // 중간에 연속마침표
        if(new_id[i] == '.' && new_id[i+1] =='.'){
            int index = -1;
            for(int j=i; j<new_id.length(); j++){
                if(new_id[j] != '.'){
                    index = j;
                    break;
                }
            }
            if(index != -1){
                new_id.erase(i+1,index-i-1);
                i = 0;
            }
        }
    }
    
    if(new_id[0] == '.'){ // 처음에 마침표
        int index = 1;
        for(int i=0; i<new_id.length(); i++){
            if(new_id[i] != '.'){
                index = i;
                break;
            }
            if(i == new_id.length() -1 && new_id[i] == '.'){
                new_id.clear();    
            }
        }    
       
        new_id.erase(0, index);
        
    }
    new_id = end_machim(new_id);

    if(new_id.empty()){ // 비어있는 경우
        for(int i=0; i<3; i++)    {
            new_id += 'a';
        }
    }
    if(new_id.length() >= 16 ) // 16자 이상
        new_id.erase(15);
    else if(new_id.length() < 3){ // 2자 이하
        while(new_id.length() < 3) {
            new_id += new_id[new_id.length()-1];
        }
    }
    new_id = end_machim(new_id);
    
    return new_id;
}
