#include <string>
#include <vector>

using namespace std;

/*
  자카드 유사도
    J(A,B)
        두 집합의 교집합 크기를 두 집합의 합집합 크기로 나눈 값
        (AnB) / (AUB)
    
    두 집합이 모두 공집합인 경우 1

    answer에 65536을 곱합 후 소수점 아래를 버리고 정수부만 출력
*/

void push_vector(vector<string>& vec, string s)
{


	for (int i = 0; i < s.length() - 1; i++)
	{
		string str = "";
		if (isalpha(s[i]) && isalpha(s[i + 1]))
		{
			str += s[i];
			str += s[i + 1];
			vec.push_back(str);
		}
	}
}

int solution(string str1, string str2) {
	int answer = 0;

    
	if (str1 == "" && str2 == "")
	{
		return 1;
	}

	vector<string> v1;
	vector<string> v2;

	for (int i = 0; i < str1.length(); i++)
	{
		if (isalpha(str1[i]))
			str1[i] = toupper(str1[i]);
	}

	for (int i = 0; i < str2.length(); i++)
	{
		if (isalpha(str2[i]))
			str2[i] = toupper(str2[i]);
	}

	push_vector(v1, str1);
	push_vector(v2, str2);
    
	int U = v1.size() + v2.size(); // 합집합
	int N = 0; // 교집합

        
	for (int i = 0; i < v1.size(); i++)
	{
		for (int j = 0; j < v2.size(); j++)
		{
			if (v1[i] == v2[j])
			{
				N++;
                v2[j] = -1;
				break;
			}
		}
	}
	
	U -= N;

	double num = (double)N / (double)U;
	num *= 65536;

    answer = (int)num;
    if(v1.size() ==0 && v2.size() == 0)
        answer =65536;
	return answer;

}
