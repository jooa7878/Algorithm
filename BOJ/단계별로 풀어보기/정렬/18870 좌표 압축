#include <iostream>
#include <algorithm>
#include <vector>
#include <unordered_map>
using namespace std;

int N;
vector<int> vec;
vector<int> cp_vec;

void solution()
{
	unordered_map<int, int> hash_map;

	for (int i = 0; i < N; i++)
	{
		int num;
		cin >> num;
		vec.push_back(num);
	}
	
	cp_vec = vec;

	sort(cp_vec.begin(), cp_vec.end());

	int idx = 1;

	for (int i = 0; i < N; i++)
	{
		if (hash_map[cp_vec[i]] == 0)
		{
			hash_map[cp_vec[i]] = idx;
			idx++;
		}
	}

	for (int i = 0; i < N; i++)
	{
		cout << hash_map[vec[i]] - 1 << ' ';
	}
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	cin >> N;

	solution();

}


